package com.company.next;import com.company.Utilities.GUI.CheckBoxList;import com.company.Utilities.GUI.Utils;import net.miginfocom.layout.AC;import net.miginfocom.swing.MigLayout;import javax.swing.*;import javax.swing.border.TitledBorder;import java.awt.*;import java.awt.event.ActionListener;import java.util.ArrayList;import java.util.HashMap;@SuppressWarnings("Since15")public class PunctureView {    private JPanel master, master2, _pDoc;    private ArrayList<JList> _all_lists = new ArrayList<JList>();    JButton _add_button = new JButton("Add");    public void addList(String pName, DefaultListModel pModel){        JList tmp = new JList(pModel);        tmp.setCellRenderer(Utils.choosable_label(14));        tmp.setName(pName);        if (_all_lists.size()==0) { tmp.setName("Doc");}        _all_lists.add(tmp);    }    public ArrayList<JList> get_all_lists(){        return  _all_lists;    }    public JPanel getPanel() {        createGUI();        for (JList f: _all_lists             ) {            if (f.getName().equals("Doc") ){                _pDoc.add(Utils.getTitledPanel("Врач", f                , TitledBorder.CENTER,                TitledBorder.CENTER                 ));               // _pDoc.add(f);            }        }       // _pDoc.revalidate().validate();        master2.validate();        return master2;    }    public PunctureView() {        try {            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {                    System.out.println(info.getName());                if ("Nimbus".equals(info.getName())) {                    UIManager.setLookAndFeel(info.getClassName());                    UIManager.put("control", new Color(255, 255, 255));                    break;                }            }        } catch (Exception e) {            // If Nimbus is not available, you can set the GUI to another look and feel.        }    }public void setList_action_listener(ActionListener f){    _add_button.addActionListener(f);}    private JPanel patient_panel(){     JPanel panel = new JPanel(new MigLayout("","",""));        panel.add(new JLabel(""), " h 30!, wrap");        panel.add(Utils.getTwoTF("Дата и Время", 7, 5), "top, split 7");        panel.add(Utils.getTF("№ протокола", 6), "top");        panel.add(Utils.getTF("Номер карты", 11), "pushx, growx, wrap");        panel.add(Utils.getTF("Примечания"), "pushx, growx, wrap");        panel.add(Utils.getTF("ФИО пациентки"), "split 3, pushx, growx ");        panel.add(Utils.getTF("ДР", 5));        panel.add(Utils.getTF("Код", 5), "wrap");        panel.add(Utils.getTF("ФИО пациентки"), "split 3, pushx, growx");        panel.add(Utils.getTF("ДР", 5));        panel.add(Utils.getTF("Код", 5), " sg a, wrap");        panel.validate();        return panel;    }    public void createGUI(){        this.master = new JPanel(new MigLayout(""));        master2 = new JPanel(new MigLayout("flowy", "", ""));      //  _all_lists = new ArrayList<JList>();        _pDoc = new JPanel(new MigLayout("insets 0")); //Utils.getTitledPanel("Врач");        //TitledBorder.DEFAULT_JUSTIFICATION,        //TitledBorder.DEFAULT_POSITION        // );        JPanel dd = new JPanel(new MigLayout("flowy", "", ""));        JComponent omc_cb = Utils.getCB("ОМС",                _pDoc.getSize().width,                22,                14,                true        );        dd.add(omc_cb, "top, gapleft 15");        dd.add(_pDoc, "gapbottom 4, grow, push, ");        CheckBoxList diag_list =  new CheckBoxList();        diag_list.addCB(Utils.DIAGNOSES);        dd.add(Utils.getTitledPanel("Диагноз", diag_list, TitledBorder.CENTER, TitledBorder.CENTER), "center, grow, push");        master.add(patient_panel(), "");        master.add(dd, "top");        master.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.BLACK, 1, true), "title"));        master.setBorder(BorderFactory.createTitledBorder("Информация"));        master.validate();        master2.add(master);        master2.add(gamete_panel(), "gap 20");        master2.add(_add_button);        master2.validate();    }          private JPanel gamete_panel(){        JPanel gamete_panel = new JPanel((new MigLayout("fillx, filly, ")));        gamete_panel.setBorder(BorderFactory.createTitledBorder("Источник Женских Гамет"));        //final JList source_list = ;       // source_list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);        //source_list.addListSelectionListener(new MyListSelectionListener(source_list));      //  gamete_panel.add(Utils.getPanel(_all_lists.get(_all_lists.size()-1)), "center, grow, push");   //     gamete_panel.add( _all_lists.get(_all_lists.size()-1), "center, grow, push");       gamete_panel.validate();        return gamete_panel;    }   public static ButtonGroup getGroupOfButtons(String[] txt, String byDefault){      ButtonGroup group = new ButtonGroup();       for (String t : txt) {               group.add(new JRadioButton("txt", t.equals(byDefault)));           }       return group;    }}